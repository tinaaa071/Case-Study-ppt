{
  "version": 3,
  "sources": ["../../@shikijs/monaco/dist/index.mjs"],
  "sourcesContent": ["import { INITIAL, EncodedTokenMetadata } from '@shikijs/vscode-textmate';\n\nfunction textmateThemeToMonacoTheme(theme) {\n  let rules = \"rules\" in theme ? theme.rules : void 0;\n  if (!rules) {\n    rules = [];\n    const themeSettings = theme.settings || theme.tokenColors;\n    for (const { scope, settings: { foreground, background, fontStyle } } of themeSettings) {\n      const scopes = Array.isArray(scope) ? scope : [scope];\n      for (const s of scopes) {\n        if (s && (foreground || background || fontStyle)) {\n          rules.push({\n            token: s,\n            foreground: normalizeColor(foreground),\n            background: normalizeColor(background),\n            fontStyle\n          });\n        }\n      }\n    }\n  }\n  const colors = Object.fromEntries(\n    Object.entries(theme.colors || {}).map(([key, value]) => [key, `#${normalizeColor(value)}`])\n  );\n  return {\n    base: theme.type === \"light\" ? \"vs\" : \"vs-dark\",\n    inherit: false,\n    colors,\n    rules\n  };\n}\nfunction shikiToMonaco(highlighter, monaco, options = {}) {\n  const themeMap = /* @__PURE__ */ new Map();\n  const themeIds = highlighter.getLoadedThemes();\n  for (const themeId of themeIds) {\n    const tmTheme = highlighter.getTheme(themeId);\n    const monacoTheme = textmateThemeToMonacoTheme(tmTheme);\n    themeMap.set(themeId, monacoTheme);\n    monaco.editor.defineTheme(themeId, monacoTheme);\n  }\n  const colorMap = [];\n  const colorToScopeMap = /* @__PURE__ */ new Map();\n  const _setTheme = monaco.editor.setTheme.bind(monaco.editor);\n  monaco.editor.setTheme = (themeName) => {\n    const ret = highlighter.setTheme(themeName);\n    const theme = themeMap.get(themeName);\n    colorMap.length = ret.colorMap.length;\n    ret.colorMap.forEach((color, i) => {\n      colorMap[i] = color;\n    });\n    colorToScopeMap.clear();\n    theme?.rules.forEach((rule) => {\n      const c = normalizeColor(rule.foreground);\n      if (c && !colorToScopeMap.has(c))\n        colorToScopeMap.set(c, rule.token);\n    });\n    _setTheme(themeName);\n  };\n  monaco.editor.setTheme(themeIds[0]);\n  function findScopeByColor(color) {\n    return colorToScopeMap.get(color);\n  }\n  const {\n    tokenizeMaxLineLength = 2e4,\n    tokenizeTimeLimit = 500\n  } = options;\n  const monacoLanguageIds = new Set(monaco.languages.getLanguages().map((l) => l.id));\n  for (const lang of highlighter.getLoadedLanguages()) {\n    if (monacoLanguageIds.has(lang)) {\n      monaco.languages.setTokensProvider(lang, {\n        getInitialState() {\n          return new TokenizerState(INITIAL);\n        },\n        tokenize(line, state) {\n          if (line.length >= tokenizeMaxLineLength) {\n            return {\n              endState: state,\n              tokens: [{ startIndex: 0, scopes: \"\" }]\n            };\n          }\n          const grammar = highlighter.getLanguage(lang);\n          const result = grammar.tokenizeLine2(line, state.ruleStack, tokenizeTimeLimit);\n          if (result.stoppedEarly)\n            console.warn(`Time limit reached when tokenizing line: ${line.substring(0, 100)}`);\n          const tokensLength = result.tokens.length / 2;\n          const tokens = [];\n          for (let j = 0; j < tokensLength; j++) {\n            const startIndex = result.tokens[2 * j];\n            const metadata = result.tokens[2 * j + 1];\n            const color = normalizeColor(colorMap[EncodedTokenMetadata.getForeground(metadata)] || \"\");\n            const scope = findScopeByColor(color) || \"\";\n            tokens.push({ startIndex, scopes: scope });\n          }\n          return { endState: new TokenizerState(result.ruleStack), tokens };\n        }\n      });\n    }\n  }\n}\nclass TokenizerState {\n  constructor(_ruleStack) {\n    this._ruleStack = _ruleStack;\n  }\n  get ruleStack() {\n    return this._ruleStack;\n  }\n  clone() {\n    return new TokenizerState(this._ruleStack);\n  }\n  equals(other) {\n    if (!other || !(other instanceof TokenizerState) || other !== this || other._ruleStack !== this._ruleStack) {\n      return false;\n    }\n    return true;\n  }\n}\nfunction normalizeColor(color) {\n  if (!color)\n    return color;\n  color = (color.charCodeAt(0) === 35 ? color.slice(1) : color).toLowerCase();\n  if (color.length === 3 || color.length === 4)\n    color = color.split(\"\").map((c) => c + c).join(\"\");\n  return color;\n}\n\nexport { shikiToMonaco, textmateThemeToMonacoTheme };\n"],
  "mappings": "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",
  "names": []
}
